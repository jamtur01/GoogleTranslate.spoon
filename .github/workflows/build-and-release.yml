name: Build, Tag, and Release Hammerspoon Spoon

permissions:
  contents: write

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      spoon_name: ${{ steps.spoon_name.outputs.spoon_name }}
      tag_name: ${{ steps.tag_name.outputs.tag_name }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get Spoon Name
        id: spoon_name
        run: |
          # Extract Spoon name from the init.lua file (assuming obj.name is defined)
          spoon_name=$(grep -Eo 'obj.name\s*=\s*"[^"]+"' init.lua | cut -d'"' -f2)
          if [ -z "$spoon_name" ]; then
            echo "Spoon name not found, failing the job."
            exit 1
          fi
          echo "Spoon name: $spoon_name"
          echo "::set-output name=spoon_name::$spoon_name"

      - name: Build the Spoon
        run: |
          # Create a distribution directory
          mkdir -p dist

          # Zip the entire Spoon directory and name it after the Spoon
          zip -r dist/${{ steps.spoon_name.outputs.spoon_name }}.spoon.zip . -x ".git*" ".github*" "dist/*"

      - name: Get the Git SHA
        id: git-sha
        run: echo "::set-output name=sha::$(git rev-parse --short HEAD)"

      - name: Extract obj.version from spoon
        id: version
        run: |
          # Extract version from obj.version if available
          version=$(grep -Eo 'obj.version\s*=\s*"[^"]+"' init.lua | cut -d'"' -f2 || echo "")
          echo "::set-output name=version::$version"

      - name: Determine Tag Name
        id: tag_name
        run: |
          if [ -n "${{ steps.version.outputs.version }}" ]; then
            echo "::set-output name=tag_name::v${{ steps.version.outputs.version }}"
          else
            date=$(date +"%Y%m%d")
            echo "::set-output name=tag_name::${date}-${{ steps.git-sha.outputs.sha }}"
          fi

      - name: Create and Push Git Tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

          # Create a new tag based on the determined tag name
          git tag -a ${{ steps.tag_name.outputs.tag_name }} -m "Release ${{ steps.tag_name.outputs.tag_name }}"

          # Push the tag to the repository
          git push origin ${{ steps.tag_name.outputs.tag_name }}

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Upload the release asset
        uses: actions/upload-artifact@v3
        with:
          name: ${{ needs.build.outputs.spoon_name }}.spoon.zip
          path: dist/${{ needs.build.outputs.spoon_name }}.spoon.zip

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.build.outputs.tag_name }}
          name: ${{ needs.build.outputs.tag_name }}
          files: dist/${{ needs.build.outputs.spoon_name }}.spoon.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
